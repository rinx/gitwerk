name: Build native image
on:
  push:
    branches:
      - master
    tags:
      - '*.*.*'
      - 'v*.*.*'
      - '*.*.*-*'
      - 'v*.*.*-*'
  pull_request:
    paths:
      - src/**
      - project.clj
      - reflection.json

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: rinx/setup-graalvm-ce@v0.0.1
        with:
          graalvm-version: 19.3.0
          java-version: java8
      - name: Install dependencies
        run: |
          gu install native-image
          curl -o lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
          chmod a+x lein
          sudo apt-get update && sudo apt-get install -y upx
      - name: Build uberjar
        run: |
          ./lein uberjar
      - name: Build native image
        run: |
          make
          # upx --lzma --best gitwerk
          zip --junk-paths gitwerk-linux-amd64 gitwerk
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: gitwerk-linux-amd64.zip
          path: ./gitwerk-linux-amd64.zip
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install GraalVM
        run: |
          brew cask install graalvm/tap/graalvm-ce-java8
          GRAALVM_HOME=/Library/Java/JavaVirtualMachines/graalvm-ce-java8-19.3.0/Contents/Home
          echo "::set-env name=PATH::$PATH:$GRAALVM_HOME/bin"
          echo "::set-env name=GRAALVM_HOME::$GRAALVM_HOME"
          echo "::set-env name=JAVA_HOME::$GRAALVM_HOME"
      - name: Install dependencies
        run: |
          gu install native-image
          curl -o lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
          chmod a+x lein
      - name: Build uberjar
        run: |
          ./lein uberjar
      - name: Build native image
        run: |
          make
          zip --junk-paths gitwerk-macos-amd64 gitwerk
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: gitwerk-macos-amd64.zip
          path: ./gitwerk-macos-amd64.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    steps:
      - uses: actions/checkout@v1
      - name: Create release
        if: startsWith( github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v1
        if: startsWith( github.ref, 'refs/tags/')
        with:
          name: gitwerk-linux-amd64.zip
      - name: Upload Release Asset (linux)
        if: startsWith( github.ref, 'refs/tags/')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gitwerk-linux-amd64.zip
          asset_name: gitwerk-linux-amd64.zip
          asset_content_type: application/zip
      - uses: actions/download-artifact@v1
        if: startsWith( github.ref, 'refs/tags/')
        with:
          name: gitwerk-macos-amd64.zip
      - name: Upload Release Asset (macos)
        if: startsWith( github.ref, 'refs/tags/')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gitwerk-macos-amd64.zip
          asset_name: gitwerk-macos-amd64.zip
          asset_content_type: application/zip
